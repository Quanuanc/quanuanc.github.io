<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>太阳照常升起</title><link>https://quanuanc.github.io/</link><description>Recent content on 太阳照常升起</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Quanuanc</copyright><lastBuildDate>Thu, 04 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://quanuanc.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>[转载]一个逢人必问：“可以借我 10 块钱吗?” 的土狗.....</title><link>https://quanuanc.github.io/posts/v2ex-borrow-money/</link><pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate><guid>https://quanuanc.github.io/posts/v2ex-borrow-money/</guid><description>太阳照常升起 https://quanuanc.github.io/posts/v2ex-borrow-money/ -&lt;p>OK，很少写帖子，这个应该算是我的处女贴，最起码在 V2EX 是。格式不好，诸君请包含。直接开始正题。&lt;/p>
&lt;p>事情的经过是这个样子，我在 20 年初的时候加入一个叫独立开发者群（微信群），里面的大佬真的说话很好听，技术一个个都很牛批，经常说的东西我都没听过，SO，我称之为卧虎藏龙的群。本人的工作节奏不均匀，有时候很忙有时候很闲，闲的时候呢就应该摸鱼，然后我就使劲的摸，游离于各个群之间吹水聊骚，那种快乐想必大家都体验过。可能是因为鄙人过于活跃，被接下来的这位网络乞丐就盯上了，他叫宋超，应该是真名。他用他高配的 MAC 截图的时候我看的很清楚 SongChaodeMacBook Pro ~ %，我想一个正常人应该不会用别人的名字。长相我不知道，性取向正常的我对男性朋友的容貌仅有 0%的兴趣，总之再帅也跟我差一点点，所以看那些个玩意没意思。我记着有一天我在群里提问，有大佬帮我解答了一波。然后这宋狗就特么开始搭讪了，问我的职业。我当然回答到我是伟大的软件工程师，这斯一听后开始了求学 10000 连问，我特么是专业解答师吗？我特么除了会写几行 BUG 还会干啥，除了问软件行业怎么入行，学习路线是什么之外，还特么老问一些跟技术无关的，我特么哪儿知道哪个黄色网站刺激，我特么哪儿知道阳痿怎么治。我特么是个写代码的中医吗？去特 M 的。当然呢我跟这条土狗交流的时候还是较为绅士的，因为我 9 年义务教育成绩很优异。&lt;/p>
&lt;p>就这样这货跟我瞎几掰扯了有一段时间后他告诉他叫啥名（我特么并不想知道你叫什么），突然有一天他感觉似乎是可以跟我开口借钱了，也就真特么开始了这一段神奇切草他 M 的经历，那天他开口借钱，第一句就是标题那句。我当时还在欢快的撸码中，突然间我思路就断了，我被这神奇的问题给惊到了。这年头谁还差 10 块钱？我问到：借 10 块能干啥？他说：“没钱吃饭&amp;hellip;”，我当时就在想要不是骗子就是家里有人住院了实在是穷的揭不开锅。我当时犹豫了，也困惑了，但是最终我还是没能狠心，毕竟善良了这么多年，怎能忍心看着他挨饿，他就是问我借 10 块钱，他能有什么坏心眼？而且他说的是借，多么诚恳的态度，我的 10 块钱只是在哪儿寄存一下下而已，多大点事情嘛。我能不帮他吗？那绝对不能够。于是乎&amp;hellip;转账 10 元&lt;/p>
&lt;p>有点意思啊哥们，说一周还还真就一周还给了我。这时候我对这个人有了点好感，虽然只有 10 块钱，但是一个人的品质不能用钱来衡量。哥们你很守信，够资格当我网友，我很中意你呀！&lt;/p>
&lt;p>不知道是不是像狗报恩那样，他知道我帮了他，后面很长一段时间老是给我发黄色图片，还有段视频，还问我好不好看。还问我有没有女同事在旁边。实不相瞒，有的确实还挺好看的，但是他问有没有女同事在旁边一下子让我觉得这 B 网友是想看我出丑还是怎么着？有病吧，难不成我他吗的叫上女同事一起看？我就说上班时间别老发那些个东西，影响不好。但是呢，他好像听不懂，就像有时候人想让狗干点什么事情，狗永远不懂人在说什么，SO 。。又不是我家狗，爱怎么样就怎么样呗。。。&lt;/p>
&lt;p>这种状况持续了有尽两个月，涩图那玩意看多了也会厌倦的嘛。况且我是已婚男，看有什么用，除了让你帮儿硬还能怎么样？这段时间里我跟他公用一个机场，按约定每月我出 10 块钱，其余的我不管。这段时间很少聊天。他应该是找别人借的多一些，就没找我借。（这个是后面群里有个老哥被借 40 没有还我才知道的）&lt;/p>
&lt;p>平静是不可能平静的，我以为我跟这位网友就是简单的公用一个机场这种关系。但是命运似乎不是这样安排的，他，他 M 的又开始借钱了，我一开始真的就是拒绝的，我觉得一个男的，成年男性。他吗的有病吧经常差这点钱，那个时候我真的很想问：你家里是不是出事了？但是我没问，担心回答是：“是”。那我岂不是要多给点钱才能帮助这位网友。最后一次借给他也是 10 块钱。我死活都不想借了，他说：“借我 10 块 5 天内还你 15 块“，我他 M 是什么人，放高利贷的吗？我借了你前前后后 5 次钱看上你那点利息了？我是真的累了，也被他的真诚（恶心的纠缠）打动。最后我说：”借 10 块 5 天还 13 块“，是的，我怎么会忍心要他 5 块的利息，你也太高了。3 块就可以了我觉得。声明一下，这种事情别来喷子喷我，我是想加上利息以后他就觉得我人品不怎么滴，然后就不找我借钱了吧，用意在这儿。&lt;/p>
&lt;p>然后事情的发展就如同电视剧一般，借钱，赖账，拉黑微信，退群，跑路。。。这种看着不像穷人，但是又装疯卖傻的狗 B 到底是什么形状的 Y 道分娩出来的？我很好奇他的家人，因为我始终相信基因以及遗传。。。&lt;/p>
&lt;p>在此祭奠我的 10 块钱，不知道宋狗用它买了什么。&lt;/p>
&lt;hr>
&lt;p>本文转载自 V2EX 论坛，访问原帖请点击 &lt;a href="https://www.v2ex.com/t/750629">此链接&lt;/a>&lt;/p>
&lt;p>如若侵权，请联系我删除。&lt;/p>
- https://quanuanc.github.io/posts/v2ex-borrow-money/ - Quanuanc</description></item><item><title>[译] 使用 VS Code 和 WSL 搭建 C++ 开发环境</title><link>https://quanuanc.github.io/posts/vscode-wsl-cpp/</link><pubDate>Fri, 07 Feb 2020 00:00:00 +0000</pubDate><guid>https://quanuanc.github.io/posts/vscode-wsl-cpp/</guid><description>太阳照常升起 https://quanuanc.github.io/posts/vscode-wsl-cpp/ -&lt;h3 id="译者序">译者序&lt;/h3>
&lt;p>本文翻译自 Visual Studio Code 官方说明文档 &lt;a href="https://code.visualstudio.com/docs/cpp/config-wsl">Using C++ and WSL in VS Code&lt;/a>&lt;/p>
&lt;p>&lt;strong>本文根据原文内容意译，而非逐词逐句翻译，如需了解更多，推荐阅读原文&lt;/strong>&lt;/p>
&lt;hr>
&lt;p>在本教程中，你将配置 Visual Studio Code，在 Windows Linux 子系统（WSL） Ubuntu 中使用 GCC C++编译器（g++）和 GDB 调试器。GCC 代表了 GNU 编译器集合，GDB 是 GNU 调试器。WSL 是 Windows 中的 Linux 环境，它直接运行在计算机硬件上，而非虚拟机中。&lt;/p>
&lt;blockquote>
&lt;p>Note: 本教程的大部分内容适用于直接在 Linux 机器上使用 C++ 和 VS Code。&lt;/p>
&lt;/blockquote>
&lt;h1 id="先决条件">先决条件&lt;/h1>
&lt;ol>
&lt;li>安装 &lt;a href="https://code.visualstudio.com/download">Visual Studio Code&lt;/a>（译者注：推荐下载 Zip 版本，开启 &lt;a href="https://code.visualstudio.com/docs/editor/portable">便携模式&lt;/a>）&lt;/li>
&lt;li>安装 &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-wsl">Remote - WSL 扩展&lt;/a>&lt;/li>
&lt;li>安装 WSL，可以按照个人习惯选择 Linux 发行版。本文使用 &lt;a href="https://www.microsoft.com/store/productId/9NBLGGH4MSV6">Ubuntu&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1 id="设置-linux-环境">设置 Linux 环境&lt;/h1>
&lt;ol>
&lt;li>打开 WSL，进入系统中。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://gitee.com/antfly2021/PicGo-IMG/raw/master/image-20200207235224938.png" alt="image-20200207235224938">&lt;/p>
&lt;ol start="2">
&lt;li>
&lt;p>建立 projects 文件夹，然后再建立 helloworld 子文件夹&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">mkdir projects
&lt;span style="color:#8be9fd;font-style:italic">cd&lt;/span> projects
mkdir helloworld
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>安装编译和调试工具。在 Ubuntu 中安装只需要执行以下命令即可&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">sudo apt-get update
sudo apt-get install build-essential gdb
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>确认以上工具是否已经安装成功&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">whereis g++
whereis gdb
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h1 id="使用-vs-code-连接到-wsl">使用 VS Code 连接到 WSL&lt;/h1>
&lt;p>在 VS Code 连接到 WSL，打开 helloworld 文件夹。&lt;/p>
&lt;p>&lt;img src="https://gitee.com/antfly2021/PicGo-IMG/raw/master/image-20200209092920677.png" alt="image-20200209092920677">&lt;/p>
&lt;p>你也可以在左下角状态栏看到连接状态。&lt;/p>
&lt;p>&lt;img src="https://gitee.com/antfly2021/PicGo-IMG/raw/master/image-20200209093241854.png" alt="image-20200209093241854">&lt;/p>
&lt;p>如果你点击状态栏的 &lt;strong>WSL: Ubuntu&lt;/strong>，你会看到一个下拉选单。点击 &lt;strong>Close Remote Connection&lt;/strong> 就可以断开与 WSL 的连接。&lt;/p>
&lt;p>&lt;img src="https://gitee.com/antfly2021/PicGo-IMG/raw/master/image-20200209093649678.png" alt="image-20200209093649678">&lt;/p>
&lt;h1 id="添加源码文件">添加源码文件&lt;/h1>
&lt;p>在文件管理器标题栏中，点击 &lt;strong>New File&lt;/strong> 按钮，并把文件命名为：helloworld.cpp。&lt;/p>
&lt;p>&lt;img src="https://gitee.com/antfly2021/PicGo-IMG/raw/master/new-file-button.png" alt="New File title bar button">&lt;/p>
&lt;h2 id="安装-cc-扩展">安装 C/C++ 扩展&lt;/h2>
&lt;p>如果你还没安装 &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools">Microsoft C/C++ extension&lt;/a> 扩展，VS Code 会提示你安装。&lt;/p>
&lt;p>&lt;img src="https://gitee.com/antfly2021/PicGo-IMG/raw/master/cpp-extension-notification.png" alt="C++ extension notification">&lt;/p>
&lt;h2 id="输入源代码">输入源代码&lt;/h2>
&lt;p>输入你的 C++ 代码并保存。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c++" data-lang="c++">&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;vector&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;string&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;span style="color:#ff79c6">&lt;/span>
&lt;span style="color:#ff79c6">using&lt;/span> &lt;span style="color:#ff79c6">namespace&lt;/span> std;
&lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">main&lt;/span>()
{
vector&lt;span style="color:#ff79c6">&amp;lt;&lt;/span>string&lt;span style="color:#ff79c6">&amp;gt;&lt;/span> msg {&lt;span style="color:#f1fa8c">&amp;#34;Hello&amp;#34;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#34;C++&amp;#34;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#34;World&amp;#34;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#34;from&amp;#34;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#34;VS Code&amp;#34;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#34;and the C++ extension!&amp;#34;&lt;/span>};
&lt;span style="color:#ff79c6">for&lt;/span> (&lt;span style="color:#ff79c6">const&lt;/span> string&lt;span style="color:#ff79c6">&amp;amp;&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">word&lt;/span> : msg)
{
cout &lt;span style="color:#ff79c6">&amp;lt;&amp;lt;&lt;/span> word &lt;span style="color:#ff79c6">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34; &amp;#34;&lt;/span>;
}
cout &lt;span style="color:#ff79c6">&amp;lt;&amp;lt;&lt;/span> endl;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="编译源码">编译源码&lt;/h1>
&lt;p>创建一个 task.json 文件，告诉 VS Code 如何编译这个程序。&lt;/p>
&lt;p>在标题栏中选择 &lt;strong>Terminal &amp;gt; Configure Default Build Task.&lt;/strong> 在下拉栏中，选择 &lt;strong>g++ build active file.&lt;/strong> &lt;img src="https://gitee.com/antfly2021/PicGo-IMG/raw/master/build-active-file.png" alt="Tasks C++ build dropdown">&lt;/p>
&lt;p>选择这个命令会在 &lt;strong>.vscode&lt;/strong> 文件夹中创建 &lt;strong>task.json&lt;/strong> 文件，它的内容如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#ff79c6">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#34;2.0.0&amp;#34;&lt;/span>,
&lt;span style="color:#ff79c6">&amp;#34;tasks&amp;#34;&lt;/span>: [
{
&lt;span style="color:#ff79c6">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#34;shell&amp;#34;&lt;/span>,
&lt;span style="color:#ff79c6">&amp;#34;label&amp;#34;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#34;g++ build active file&amp;#34;&lt;/span>,
&lt;span style="color:#ff79c6">&amp;#34;command&amp;#34;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#34;/usr/bin/g++&amp;#34;&lt;/span>,
&lt;span style="color:#ff79c6">&amp;#34;args&amp;#34;&lt;/span>: [&lt;span style="color:#f1fa8c">&amp;#34;-g&amp;#34;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#34;${file}&amp;#34;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#34;-o&amp;#34;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#34;${fileDirname}/${fileBasenameNoExtension}&amp;#34;&lt;/span>],
&lt;span style="color:#ff79c6">&amp;#34;options&amp;#34;&lt;/span>: {
&lt;span style="color:#ff79c6">&amp;#34;cwd&amp;#34;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#34;/usr/bin&amp;#34;&lt;/span>
},
&lt;span style="color:#ff79c6">&amp;#34;problemMatcher&amp;#34;&lt;/span>: [&lt;span style="color:#f1fa8c">&amp;#34;$gcc&amp;#34;&lt;/span>],
&lt;span style="color:#ff79c6">&amp;#34;group&amp;#34;&lt;/span>: {
&lt;span style="color:#ff79c6">&amp;#34;kind&amp;#34;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#34;build&amp;#34;&lt;/span>,
&lt;span style="color:#ff79c6">&amp;#34;isDefault&amp;#34;&lt;/span>: &lt;span style="color:#ff79c6">true&lt;/span>
}
}
]
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="运行编译任务">运行编译任务&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>回到 helloworld.cpp，现在可以开始编译源代码了&lt;/p>
&lt;/li>
&lt;li>
&lt;p>按下快捷键 Ctrl + Shift + B&lt;/p>
&lt;/li>
&lt;li>
&lt;p>编译任务开始后，可以在终端界面中看到输出信息&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://gitee.com/antfly2021/PicGo-IMG/raw/master/wsl-task-in-terminal.png" alt="G++ build output in terminal">&lt;/p>
&lt;ol start="4">
&lt;li>在终端中输入 ./helloworld 即可运行程序&lt;/li>
&lt;/ol>
&lt;h1 id="调试-helloworldcpp">调试 helloworld.cpp&lt;/h1>
&lt;p>下一步，你会创建一个 launch.json，用以配置 VS Code 如何调用 GDB 调试器来调试程序。选择 &lt;strong>Debug &amp;gt; Add Configuration&amp;hellip;&lt;/strong> 然后选择 &lt;strong>C++ (GDB/LLDB)&lt;/strong>。&lt;/p>
&lt;p>在下拉栏中选择 &lt;strong>g++ build and debug active file&lt;/strong>。&lt;/p>
&lt;p>VS Code 会创建一个 launch.json 文件，内容如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#ff79c6">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#34;0.2.0&amp;#34;&lt;/span>,
&lt;span style="color:#ff79c6">&amp;#34;configurations&amp;#34;&lt;/span>: [
{
&lt;span style="color:#ff79c6">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#34;g++ build and debug active file&amp;#34;&lt;/span>,
&lt;span style="color:#ff79c6">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#34;cppdbg&amp;#34;&lt;/span>,
&lt;span style="color:#ff79c6">&amp;#34;request&amp;#34;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#34;launch&amp;#34;&lt;/span>,
&lt;span style="color:#ff79c6">&amp;#34;program&amp;#34;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#34;${fileDirname}/${fileBasenameNoExtension}&amp;#34;&lt;/span>,
&lt;span style="color:#ff79c6">&amp;#34;args&amp;#34;&lt;/span>: [],
&lt;span style="color:#ff79c6">&amp;#34;stopAtEntry&amp;#34;&lt;/span>: &lt;span style="color:#ff79c6">false&lt;/span>,
&lt;span style="color:#ff79c6">&amp;#34;cwd&amp;#34;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#34;${workspaceFolder}&amp;#34;&lt;/span>,
&lt;span style="color:#ff79c6">&amp;#34;environment&amp;#34;&lt;/span>: [],
&lt;span style="color:#ff79c6">&amp;#34;externalConsole&amp;#34;&lt;/span>: &lt;span style="color:#ff79c6">false&lt;/span>,
&lt;span style="color:#ff79c6">&amp;#34;MIMode&amp;#34;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#34;gdb&amp;#34;&lt;/span>,
&lt;span style="color:#ff79c6">&amp;#34;setupCommands&amp;#34;&lt;/span>: [
{
&lt;span style="color:#ff79c6">&amp;#34;description&amp;#34;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#34;Enable pretty-printing for gdb&amp;#34;&lt;/span>,
&lt;span style="color:#ff79c6">&amp;#34;text&amp;#34;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#34;-enable-pretty-printing&amp;#34;&lt;/span>,
&lt;span style="color:#ff79c6">&amp;#34;ignoreFailures&amp;#34;&lt;/span>: &lt;span style="color:#ff79c6">true&lt;/span>
}
],
&lt;span style="color:#ff79c6">&amp;#34;preLaunchTask&amp;#34;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#34;g++ build active file&amp;#34;&lt;/span>,
&lt;span style="color:#ff79c6">&amp;#34;miDebuggerPath&amp;#34;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#34;/usr/bin/gdb&amp;#34;&lt;/span>
}
]
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="开始调试">开始调试&lt;/h2>
&lt;ol>
&lt;li>回到 helloworld.cpp 文件&lt;/li>
&lt;li>按下 F5 或者选择 &lt;strong>Debug &amp;gt; Start Debugging&lt;/strong>。在开始逐步执行代码之前，让我们花点时间注意界面中的几个更改：&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>集成的终端会出现在编辑区的下方。在 &lt;strong>Debug Output&lt;/strong> 标签页中，你可以看到代码的输出，这表明调试器已经启动并运行。&lt;/li>
&lt;li>编辑器中高亮显示了 &lt;code>main&lt;/code> 方法的第一行语句。这是 C++ 扩展自动为你设定的断点。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://gitee.com/antfly2021/PicGo-IMG/raw/master/wsl-breakpoint-default.png" alt="Initial breakpoint">&lt;/p>
&lt;ul>
&lt;li>左侧的 &lt;strong>Run&lt;/strong> 视图显示调试信息。&lt;/li>
&lt;li>在代码编辑器的顶部，将显示一个调试控制面板。您可以通过按住左侧的点在屏幕上移动它。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://gitee.com/antfly2021/PicGo-IMG/raw/master/debug-controls.png" alt="debug-control">&lt;/p>
&lt;h1 id="关闭">关闭&lt;/h1>
&lt;p>当您在 WSL 中完成工作后，可以使用 &lt;strong>File&lt;/strong> 菜单中的 &lt;strong>Close Remote Connection&lt;/strong> 命令和快捷键（Ctrl+Shift+P）关闭远程会话。 这将重新启动本地运行的 VS Code。您可以在 &lt;strong>File&lt;/strong> &amp;gt; &lt;strong>Open Recent&lt;/strong> 中选择带有 &lt;strong>[WSL]&lt;/strong> 后缀的文件夹来重新打开 WSL 会话。&lt;/p>
- https://quanuanc.github.io/posts/vscode-wsl-cpp/ - Quanuanc</description></item></channel></rss>